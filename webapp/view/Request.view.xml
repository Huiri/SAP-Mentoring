<mvc:View 
    controllerName="project1.controller.Request"
    xmlns:mvc="sap.ui.core.mvc" 
    xmlns:f="sap.f"
    displayBlock="true"
    xmlns:t="sap.ui.table"
    xmlns:core="sap.ui.core"
    xmlns:form="sap.ui.layout.form"
    xmlns:layout="sap.ui.layout"
    xmlns="sap.m">
    <!-- xmlns:namespace="라이브러리" 라이브러리 부를 별칭 설정 -->
    <f:DynamicPage  id="RequestPage">
        <!-- <f:title>
            <f:DynamicPageTitle id="_IDGenDynamicPageTitle1">
                <f:heading>
                    <HBox id="_IDGenHBox1">
                        <Title id="_IDGenTitle1" text="물품 요청 목록"/>
                    </HBox>
                </f:heading>
            </f:DynamicPageTitle>
        </f:title> -->

        <f:header>
            <f:DynamicPageHeader id="_IDGenDynamicPageHeader1" pinnable="true">
                <form:SimpleForm id="_IDGenSimpleForm1" layout="ResponsiveGridLayout">
                    <form:content>
                        <!-- VBox : Vertical Box, HBox : Horizon Box -->
                        <!-- VBox : 하나의 박스에 관련된 내용을 같이 담기 위한 선언, 방향 : vertical  -->
                        <VBox id="_IDGenVBox1">
                        <!-- input에 넣어야 할 값 설명 위한 label 값 -->
                            <Label id="_IDGenLabel7" text="요청 번호 :"/>
                            <!-- 입력받는 부분 -->
                            <Input id="ReqNum"/>
                            <!-- 화면에서 차지할 비율 설정 -->
                            <layoutData>
                                <layout:GridData id="_IDGenGridData1" span="XL2 L2 M6 S12"/>
                                <!-- 화면을 12등분 했을 때 해상도별 얼마나 차지할 것인지 결정
                                일반적으로 M사이즈 : 6, S사이즈는 12를 많이 사용 -->
                            </layoutData>
                        </VBox>
                        <!-- VBox : 하나의 박스에 관련된 내용을 같이 담기 위한 선언, 방향 : vertical  -->

                        <VBox id="_IDGenVBox2">
                        <!-- input에 넣어야 할 값 설명 위한 label 값 -->
                            <Label id="_IDGenLabel8" text="요청 물품 :"/>
                            <Input id="ReqGood"/>
                            <!-- 화면에서 차지할 비율 설정 -->
                            <layoutData>
                                <layout:GridData id="_IDGenGridData2" span="XL2 L2 M6 S12"/>
                            </layoutData>
                        </VBox>
                        <VBox id="_IDGenVBox3">
                        <!-- input에 넣어야 할 값 설명 위한 label 값 -->
                            <Label id="_IDGenLabel9" text="요청자 :"/>
                            <Input id="Requester"/>
                            <!-- 화면에서 차지할 비율 설정 -->
                            <layoutData>
                                <layout:GridData id="_IDGenGridData3" span="XL2 L2 M6 S12"/>
                            </layoutData>
                        </VBox>
                        <VBox id="_IDGenVBox4">
                        <!-- input에 넣어야 할 값 설명 위한 label 값 -->
                            <Label id="_IDGenLabel10" text="요청 일자 :"/>
                            <!-- date값을 받기 위한 태그 -->
                            <DatePicker id="ReqDate"
                                        displayFormat="yyyy-MM"/>
                                        <!-- default : 연-월-일 -->
                            <layoutData>
                                <layout:GridData id="_IDGenGridData4" span="XL2 L2 M6 S12"/>
                            </layoutData>
                        </VBox>
                        <VBox id="_IDGenVBox4_2">
                        <!-- DatePicker에 넣어야 할 값 설명 위한 label 값 -->
                            <Label id="_IDGenLabel10_2" text="요청 일자2 :"/>
                            <!-- date값을 받기 위한 태그 -->
                            <DatePicker id="ReqDate2"
                                        displayFormat="yyyy-MM-dd"/>
                            <!-- yyyy-MM-dd로 날짜까지 받을 수 있음, day는 소문자로 선언해야 함(대문자 선언 시 오류 발생) -->

                            <layoutData>
                                <layout:GridData id="_IDGenGridData4_2" span="XL2 L2 M6 S12"/>
                            </layoutData>
                        </VBox>
                        <VBox id="_IDGenVBox5">
                        <!-- input에 넣어야 할 값 설명 위한 label 값 -->
                            <Label id="_IDGenLabel11" text="처리 상태 :"/>
                            <Select width="100%" id="ReqStatus">
                            <!-- select option 선언 -->
                                <core:Item id="_IDGenItem1" text="전체"/>
                                <!-- key값을 선언해주어야 filtering 가능 -->
                                <core:Item id="_IDGenItem2" text="승인" key="A"/>
                                <core:Item id="_IDGenItem3" text="처리 대기" key="B"/>
                                <core:Item id="_IDGenItem4" text="반려" key="C"/>
                            </Select>
                            <!-- 12등분한 화면의 비율을 얼만큼 차지할지 결정 -->
                            <layoutData>
                                <layout:GridData id="_IDGenGridData5" span="XL2 L2 M6 S12"/>
                            </layoutData>
                        </VBox>
                        <!-- <VBox id="_IDGenVBox6">
                            <Label id="_IDGenLabel12" text="요청 국가 :"/>
                                <ComboBox id="ReqCtr"
                                    items="{
                                            path='/CountriesCollection'
                                            }">
                                <core:Item id="_IDGenItem5" key="{key}" text="{text}"/>    
                            </ComboBox>
                            <layoutData>
                                <layout:GridData id="_IDGenGridData6" span="XL2 L2 M6 S12"/>
                            </layoutData>
                        </VBox> -->
                        <!-- VBox, HBox에 비해 상대적으로 유연한 box -->
                        <FlexBox id="_IDGenHBox2" justifyContent="End">
                            <!-- 버튼 클릭 시 input value 값을 토대로 검색하는 함수 실행 -->
                            <Button id="_IDGenButton5" text="검색" type="Emphasized" press=".onSearch"/>
                            <!-- 버튼 클릭 시 input value 초기화 -->
                            <Button id="_IDGenButton4" text="초기화" type="Transparent" press=".onReset" class="sapUiTinyMarginBegin"/>
                            <layoutData>
                                <layout:GridData id="_IDGenGridData7"  span="XL12 L12 M12 S12"/>
                            </layoutData>
                        </FlexBox>                       
                    </form:content>
                </form:SimpleForm>

            </f:DynamicPageHeader>
            <!-- 데이터를 불러와야 선택할 값이 생성되는데 데이터 존재 X -> 주석 처리 -->
            <!-- <VBox id="_IDGenVBox6_2">
                    <Label id="_IDGenLabel12_2" text="요청 국가 :"/>
                        <MultiComboBox id="ReqCtr2"
                            items="{
                                    path='/CountriesCollection',
                                    sorter:{path : 'Name'}
                                    }">
                            <core:Item id="_IDGenItem5_2" key="{ProductId}" text="{Name}"/>    
                        </MultiComboBox>
                    <layoutData>
                        <layout:GridData id="_IDGenGridData6_2" span="XL2 L2 M6 S12"/>
                    </layoutData>
                </VBox>
 -->
        </f:header>

        <!-- 실제 content 부분 -->
        <f:content>
            <!-- table 선언 -->
            <t:Table 
                id="ui_table"
                selectionMode="MultiToggle"
                rows="{Request>/RequestOrder}" 
                selectionBehavior="RowOnly"
                rowSelectionChange=".getContext"
                width="auto">
                <!-- SelectionMode : 여러 row 선택 가능
                rows : row에 할당할 데이터 경로 지정
                selectionBehavior : 셀 선택 방지 및 row만 선택할 수 있도록 함
                rowSelectionChange : 선택한 row값이 변경될 시 호출되는 함수
                width : 화면 크기에 따라 자동으로 설정 -->
                <!-- rows="{Request>/RequestOrder}" => 사용할 데이터를 행에 입력 -->
                    
                    <!-- 테이블 상단에 아이콘 및 버튼 추가시 사용 -->
                    <t:extension> 
                        <!-- <OverflowToolbar id="_IDGenOverflowToolbar1" style="Clear">
                            <Title id="title" text="Products"/>
                            <ToolbarSpacer id="_IDGenToolbarSpacer1"/>
                            <Button id="_IDGenButton1"
                                icon="sap-icon://activities"
                                tooltip="show indices of selected items"
                                press=".getSelectedIndices"/>
                            <Button id="_IDGenButton2"
                                icon="sap-icon://activity-items"
                                tooltip="show context of latest selection item"
                                press=".getContextByIndex"/>
                            <Button id="_IDGenButton3"
                                icon="sap-icon://decline"
                                tooltip="clear selection"
                                press=".clearSelection"/>
                            <Switch id="_IDGenSwitch1"
                                state="true"
                                customTextOn="on"
                                customTextOff="off"
                                tooltip="enable select all items"
                                change="onSwitchChange"/>
                        </OverflowToolbar> -->
                            <OverflowToolbar id="_IDGenOverflowToolbar1" >
                            <!-- 왼쪽부터 자식 요소가 생성됨 -->
                                <Title id="TableName" text="물품 요청 목록"/>
                                <ToolbarSpacer id="_IDGenToolbarSpacer1"/><!-- 우측에 요소를 정렬하고 싶을 때 사용 -->
                                <!-- 버튼 클릭 시 물품 요청 생성 페이지로 이동 -->
                                <Button 
                                    id="_IDGenButton7"
                                    text="물품 요청 생성"
                                    press=".onCreateOrder"
                                    type="Transparent"/>
                                <!-- 버튼 클릭 시 정렬 조건 설정 가능한 dialog 창 띄우는 함ㅅ ㅜ실행 -->
                                <Button id="_IDGenButton6"
                                    icon="sap-icon://sort"
                                    tooltip="정렬"
                                    press=".onSort" 
                                    type="Transparent"/>
                                    <!-- press : 버튼 눌렀을 때 어떤 함수를 호출할 지 -->
                                    <!-- tooltip : 버튼에 마우스 hover 시 표시해줄 값 선언, 버튼 용도 설명용  -->
                            </OverflowToolbar>
                        </t:extension>

                <!-- col 여러개 생성할 거라서 columns 태그를 상위에 위치시킴 -->
                <t:columns>
                    <t:Column id="_IDGenColumn1" hAlign="Center">
                        <!-- <Label><Text> sap.m에 존재하기 때문에 namespace:Label || Text 선언 X -->
                        <Label id="_IDGenLabel1" text="요청번호"/>
                        <t:template>
                            <Text id="_IDGenText1" text="{Request>ReqNum}"/>
                            <!-- rows로 불러온 값 중에서도 ReqNum 값을 할당 -->
                        </t:template>  
                    </t:Column>

                    <t:Column id="_IDGenColumn2" hAlign="Center">
                        <Label id="_IDGenLabel2" text="요청물품"/>
                        <t:template>
                            <Text id="_IDGenText2" text="{Request>ReqGood}"/>
                            <!-- rows로 불러온 값 중에서도 ReqNReqGoodum 값을 할당 -->

                        </t:template>
                    </t:Column>

                    <t:Column id="_IDGenColumn3" hAlign="Center">
                        <Label id="_IDGenLabel3" text="물품개수"/>
                        <t:template>
                            <Text id="_IDGenText3" text="{Request>ReqQty}"/>
                            <!-- rows로 불러온 값 중에서도 ReqQty 값을 할당 -->
                        </t:template>
                    </t:Column>

                    <t:Column id="_IDGenColumn4" hAlign="Center">
                        <Label id="_IDGenLabel4" text="요청자"/>
                        <t:template>
                            <Text id="_IDGenText4" text="{Request>Requester}"/>
                            <!-- rows로 불러온 값 중에서도 Requester 값을 할당 -->
                        </t:template>
                    </t:Column>

                    <t:Column id="_IDGenColumn5" hAlign="Center">
                        <Label id="_IDGenLabel5" text="요청일자"/>
                        <t:template>
                            <Text id="_IDGenText5" text="{Request>ReqDate}"/>
                            <!-- rows로 불러온 값 중에서도 ReqDate 값을 할당 -->
                        </t:template>
                    </t:Column>
                    
                    <t:Column id="_IDGenColumn6" hAlign="Center">
                        <Label id="_IDGenLabel6" text="처리상태"/>
                        <t:template>
                        <!-- &#36; : $의 특수문자 코드 -->
                            <ObjectStatus 
                                id="_IDGenObjectStatus1"
                                active="true"
                                press="alert(&#36;{$source>/text} + ' pressed')"
                                text="{
                                    path:'Request>ReqStatus',
                                    formatter:'.formatter.statusText'
                                    }"
                                state = "{=${Request>ReqStatus} === 'A' ? 'Success' : ${Request>ReqStatus}  === 'B' ? 'None' : 'Error'}"/>
                                <!-- 값을 하나씩 불러오고 싶을 경우 $를 붙여서 불러옴, $ 붙이지 않을 경우 뭉텅이로 불러와짐 -->
                                <!--text : formatter를 이용해 실제 데이터 및 값 변경해서 보여줌 -->
                                <!-- state : 중복 삼항연산자를 이용해  A,B,C값에 따라 색상 변경 -> ObjectStatus태그 활용 -->

                        </t:template>
                    </t:Column>
                </t:columns>

            </t:Table>
    </f:content>
    </f:DynamicPage>
    <!-- 개별적인 공부(row 선택 시 선택한 값 출력 위함) -->
    <Button text="Indicies" id="btn_selected_indicies" press=".getSelectedIndices"/>
    <Button text="Context Index" id="btn_selected_Context_Index" press=".getContextByIndex"/>
    <Button text="Context" id="btn_selected_context" press=".getContext"/>

    
    
</mvc:View>